{"version":3,"file":"static/js/905.203cbb33.chunk.js","mappings":"iJACA,MAA0B,yBAA1B,EAA6D,yBAA7D,EAAsG,+BAAtG,EAAkJ,4BAAlJ,EAA+L,gCAA/L,EAA8O,8BCA9O,EAAuB,sBAAvB,EAAuD,yB,SCWvD,EAToB,SAACA,GACjB,OACI,eAAIC,UAAWC,EAAa,UACxB,gBAAKD,UAAWC,EAAgB,SAAEF,EAAME,WAGpD,E,UCRA,EAAuB,qBAAvB,EAAqD,uBAArD,EAAqF,uBCarF,EAXmB,SAACF,GAChB,OACI,gBAAIC,UAAWE,EAAY,WACvB,gBAAKF,UAAWE,EAAc,UAC1B,gBAAKC,IAAKJ,EAAMK,YAEpB,SAAC,KAAO,CAACJ,UAAWE,EAAeG,GAAE,mBAAcN,EAAMO,IAAK,SAAEP,EAAMQ,SAGlF,ECXA,G,QAAgC,oCAAhC,EAA0E,0BAA1E,EAAiH,gCAAjH,EAAyJ,2BAAzJ,EAA4L,2BAA5L,EAAsO,kCAAtO,EAAsR,iC,oBCgDtR,EA5CoB,SAACR,GAEjB,IAMMS,EAAmBC,EAAAA,KAAaC,MAAM,CACxCT,QAASQ,EAAAA,KACJE,IAAI,GAAI,aACRC,SAAS,cAGlB,OACI,gBAAKZ,UAAWa,EAAmB,UAC/B,SAAC,KAAM,CAACC,cAdK,CAACb,QAAS,IAcgBc,SAb9B,SAACC,GACdjB,EAAMkB,aAAaD,EAAef,SAClCe,EAAef,QAAU,EAC7B,EAUqEO,iBAAkBA,EAAiB,SAE3F,YAAwB,IAAtBU,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACHC,EAAWF,EAAOjB,SAAWkB,EAAQlB,QAEzC,OACI,UAAC,KAAI,CAACD,UAAWa,EAAU,WACvB,iBAAKb,UAAWa,EAAgB,WAC5B,kBAAOQ,QAAQ,kBACf,SAAC,KAAK,CAACrB,UAAWoB,EAAQ,UAAMP,EAAU,YAAIA,GAAeA,EACtDS,GAAG,WACHhB,GAAG,eACHC,KAAK,YACXa,GAAW,gBAAKpB,UAAWa,EAAkB,SAAEK,EAAOjB,UAAiB,SAE5E,gBAAKD,UAAWa,EAAiB,UAC7B,mBAAQU,KAAK,SAAQ,SAAC,aAItC,KAKhB,E,oBCFA,GAHyBC,EAAAA,EAAAA,KANH,SAACC,GACnB,MAAO,CACHC,SAAUD,EAAME,YAAYD,SAC5BE,QAASH,EAAME,YAAYC,QAEnC,GACiD,CAC7CX,aAAAA,EAAAA,GADqBO,EAjCF,SAACzB,GAEpB,IAAI8B,EAAkB9B,EAAM2B,SAASI,KAAI,SAAC7B,GACtC,OAAQ,SAAC8B,EAAW,CAAC9B,QAASA,EAAQA,QAASK,GAAIL,EAAQK,IAC/D,IACI0B,EAAiBjC,EAAM6B,QAAQE,KAAI,SAAC5B,GACpC,OAAQ,SAAC+B,EAAU,CAAC1B,KAAML,EAAOK,KAAMD,GAAIJ,EAAOI,GAAIF,OAAQF,EAAOE,QACzE,IAEA,OACI,gBAAKJ,UAAW4B,EAAgB,UAC5B,iBAAK5B,UAAW4B,EAAgB,WAC5B,gBAAK5B,UAAW4B,EAAsB,UAClC,eAAI5B,UAAW4B,EAAmB,SAC7BI,OAGT,iBAAKhC,UAAW4B,EAAuB,WACnC,eAAI5B,UAAW4B,EAAqB,SAC/BC,KAEL,SAAC,EAAW,CAACZ,aAAclB,EAAMkB,sBAKrD,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://my-app/./src/components/Dialogs/MessageForm/MessageForm.module.css?93bd","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__c4zaO\",\"columns\":\"Dialogs_columns__+r3ig\",\"columnDialogs\":\"Dialogs_columnDialogs__yb2vr\",\"dialogList\":\"Dialogs_dialogList__GijAV\",\"columnMessages\":\"Dialogs_columnMessages__pPnWH\",\"messagesList\":\"Dialogs_messagesList__VkfJm\",\"form\":\"Dialogs_form__I68PB\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Message_item__xKX65\",\"content\":\"Message_content__WbKPA\"};","\r\nimport  message from \"./Message.module.css\"\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <li className={message.item}>\r\n            <div className={message.content}>{props.message}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialog_item__cNWCE\",\"avatar\":\"Dialog_avatar__XP5ly\",\"person\":\"Dialog_person__wHpZW\"};","import {NavLink} from \"react-router-dom\";\r\nimport dialog from \"./Dialog.module.css\"\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <li className={dialog.item}>\r\n            <div className={dialog.avatar}>\r\n                <img src={props.avatar}></img>\r\n            </div>\r\n            <NavLink className={dialog.person} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"MessageForm_formContainer__rdn7G\",\"form\":\"MessageForm_form__NdYMf\",\"inputBlock\":\"MessageForm_inputBlock__x-gdj\",\"input\":\"MessageForm_input__K01x9\",\"error\":\"MessageForm_error__DlR9d\",\"errorMessage\":\"MessageForm_errorMessage__ghbVe\",\"buttonBlock\":\"MessageForm_buttonBlock__RCv77\"};","import React from \"react\";\r\nimport form from \"./MessageForm.module.css\"\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup'\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    let currentMessage = {message: '',}\r\n    let addMessage = (currentMessage) => {\r\n        props.addMessageAC(currentMessage.message)\r\n        currentMessage.message = ''\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        message: Yup.string()\r\n            .max(50, 'Too Long!')\r\n            .required('Required'),\r\n    })\r\n\r\n    return (\r\n        <div className={form.formContainer}>\r\n            <Formik initialValues={currentMessage} onSubmit={addMessage} validationSchema={validationSchema}>\r\n\r\n                {({errors, touched}) => {\r\n                    let hasError = errors.message && touched.message\r\n\r\n                    return (\r\n                        <Form className={form.form}>\r\n                            <div className={form.inputBlock}>\r\n                                <label htmlFor='inputMessage'></label>\r\n                                <Field className={hasError ? `${form.input} ${form.error}` : form.input}\r\n                                       as='textarea'\r\n                                       id='inputMessage'\r\n                                       name='message'/>\r\n                                {hasError ? <div className={form.errorMessage}>{errors.message}</div> : null}\r\n                            </div>\r\n                            <div className={form.buttonBlock}>\r\n                                <button type='submit'>Send</button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MessageForm","import dialogs from './Dialogs.module.css'\r\nimport MessageItem from \"./Message/Message\";\r\nimport DialogItem from \"./Dialog/Dialog\";\r\nimport MessageForm from \"./MessageForm/MessageForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessageAC} from \"../../redux/reducerDialogs\";\r\n\r\n\r\nconst DialogsWrapper = (props) => {\r\n\r\n    let currentMessages = props.messages.map((message) => {\r\n        return (<MessageItem message={message.message} id={message.id}/>)\r\n    })\r\n    let currentDialogs = props.dialogs.map((dialog) => {\r\n        return (<DialogItem name={dialog.name} id={dialog.id} avatar={dialog.avatar}/>)\r\n    })\r\n\r\n    return (\r\n        <div className={dialogs.wrapper}>\r\n            <div className={dialogs.columns}>\r\n                <div className={dialogs.columnDialogs}>\r\n                    <ul className={dialogs.dialogList}>\r\n                        {currentDialogs}\r\n                    </ul>\r\n                </div>\r\n                <div className={dialogs.columnMessages}>\r\n                    <ul className={dialogs.messagesList}>\r\n                        {currentMessages}\r\n                    </ul>\r\n                    <MessageForm addMessageAC={props.addMessageAC}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        dialogs: state.dialogsPage.dialogs\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps,{\r\n    addMessageAC\r\n})(DialogsWrapper)\r\nexport default DialogsContainer"],"names":["props","className","message","dialog","src","avatar","to","id","name","validationSchema","Yup","shape","max","required","form","initialValues","onSubmit","currentMessage","addMessageAC","errors","touched","hasError","htmlFor","as","type","connect","state","messages","dialogsPage","dialogs","currentMessages","map","Message","currentDialogs","Dialog"],"sourceRoot":""}